version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: football-recorder-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: football_recorder
      POSTGRES_USER: recorder_user
      POSTGRES_PASSWORD: recorder_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - football-recorder-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: football-recorder-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://recorder_user:recorder_password@postgres:5432/football_recorder
      - PORT=5000
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_REGION=${S3_REGION}
      - FOOTBALL_API_KEY=${FOOTBALL_API_KEY}
      - FOOTBALL_API_URL=${FOOTBALL_API_URL}
      - JWT_SECRET=${JWT_SECRET}
      - RECORDINGS_PATH=/app/recordings
      - MAX_RECORDING_DURATION=7200000
      - FFMPEG_PATH=/usr/bin/ffmpeg
    volumes:
      - recordings_data:/app/recordings
      - ./backend/logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - football-recorder-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5000
    container_name: football-recorder-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - football-recorder-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: football-recorder-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - football-recorder-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  recordings_data:
    driver: local

networks:
  football-recorder-network:
    driver: bridge